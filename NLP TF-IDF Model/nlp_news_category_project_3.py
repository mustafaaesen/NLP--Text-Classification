# -*- coding: utf-8 -*-
"""NLP News Category Project-3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ahr0NUeUos96lz1P8topcZVXQKwpeGpf
"""

#Bu projede ise TF-IDF modeli ile Ã§alÄ±ÅŸmaya uygun SMS spam veri seti ile Ã§alÄ±ÅŸacaÄŸÄ±z

#TF-IDF modeli kelime bazlÄ±  sÄ±nÄ±flandÄ±rma yaptÄ±ÄŸÄ± iÃ§in bert e gÃ¶re daha hÄ±zlÄ± Ã§alÄ±ÅŸÄ±r ve sonuÃ§
#verir

import pandas as pd

# ; ile ayrÄ±ldÄ±ÄŸÄ± iÃ§in sep parametresiyle belirtiyoruz
df = pd.read_csv("/content/TurkishSMSCollection.csv", sep=";")

# Ä°lk 5 veriyi gÃ¶ster
df.head()

# Gerekli kÃ¼tÃ¼phaneler
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.naive_bayes import MultinomialNB
from sklearn.metrics import classification_report, accuracy_score

# Etiketleri metinle eÅŸle (1 â†’ spam, 2 â†’ ham)
df["label"] = df["Group"].map({1: "spam", 2: "ham"})

# Sadece gerekli sÃ¼tunlarÄ± al
df = df[["Message", "label"]]

# BoÅŸluklarÄ± temizle
df["Message"] = df["Message"].astype(str).str.strip()
df["label"] = df["label"].astype(str).str.strip()

# Sonucu kontrol et
df.head()

X = df["Message"]
y = df["label"]

# %80 eÄŸitim, %20 test verisi
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# TF-IDF dÃ¶nÃ¼ÅŸtÃ¼rÃ¼cÃ¼yÃ¼ oluÅŸtur
vectorizer = TfidfVectorizer()

# EÄŸitim ve test verisine uygula
X_train_tfidf = vectorizer.fit_transform(X_train)
X_test_tfidf = vectorizer.transform(X_test)

# Modeli oluÅŸtur
model = MultinomialNB()

# EÄŸitimi yap
model.fit(X_train_tfidf, y_train)

# Tahmin yap
y_pred = model.predict(X_test_tfidf)

# SonuÃ§larÄ± deÄŸerlendir
print("DoÄŸruluk OranÄ±:", accuracy_score(y_test, y_pred))
print("\nSÄ±nÄ±flandÄ±rma Raporu:\n", classification_report(y_test, y_pred))

def tahmin_et_interaktif():
    while True:
        print("Ã‡Ä±kmak iÃ§in 'q' yazÄ±p enter'a basabilirsiniz.")
        mesaj = input("ğŸ“¨ E-posta veya SMS iÃ§eriÄŸini giriniz: ")

        if mesaj.lower() == 'q':
            print("Sistemden Ã§Ä±kÄ±lÄ±yor.")
            break

        mesaj_tfidf = vectorizer.transform([mesaj])
        tahmin = model.predict(mesaj_tfidf)[0]
        print(f"ğŸ“Œ Tahmin Edilen SÄ±nÄ±f: {tahmin}\n")

# Fonksiyonu Ã§alÄ±ÅŸtÄ±r
tahmin_et_interaktif()